{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport const addProductSchema = z.object({\n  name: z.string().min(3, { message: \"Product name must be at least 3 characters.\" }).max(100),\n  description: z.string().min(10, { message: \"Description must be at least 10 characters.\" }).max(500),\n  mrp: z.coerce.number().positive({ message: \"MRP must be a positive number.\" }),\n  code: z.string().min(2, { message: \"Product code must be at least 2 characters.\" }).max(50),\n  barcode: z.string().min(5, { message: \"Barcode must be at least 5 characters.\" }).max(50),\n  lowInventoryFactor: z.coerce.number().int().min(0, { message: \"Low inventory factor must be a non-negative integer.\" }),\n});\n\nexport const sellProductSchema = z.object({\n  barcode: z.string().min(5, { message: \"Barcode must be at least 5 characters.\" }).max(50),\n  quantity: z.coerce.number().int().positive({ message: \"Quantity must be a positive integer.\" }),\n});\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA8C,GAAG,GAAG,CAAC;IACxF,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI;QAAE,SAAS;IAA8C,GAAG,GAAG,CAAC;IAChG,KAAK,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC;QAAE,SAAS;IAAiC;IAC5E,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA8C,GAAG,GAAG,CAAC;IACxF,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAyC,GAAG,GAAG,CAAC;IACtF,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAuD;AACvH;AAEO,MAAM,oBAAoB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAyC,GAAG,GAAG,CAAC;IACtF,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,GAAG,QAAQ,CAAC;QAAE,SAAS;IAAuC;AAC/F","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data.ts"],"sourcesContent":["import type { Product, ProductFormData } from '@/types';\n\nlet products: Product[] = [\n  { id: '1', name: 'Sample Product A', description: 'This is a sample product.', mrp: 100, code: 'SP001', barcode: '1234567890123', lowInventoryFactor: 5, currentStock: 10 },\n  { id: '2', name: 'Sample Product B', description: 'Another great sample item.', mrp: 25.50, code: 'SP002', barcode: '9876543210987', lowInventoryFactor: 10, currentStock: 8 },\n  { id: '3', name: 'Low Stock Item C', description: 'This item is running low.', mrp: 49.99, code: 'LS003', barcode: '1122334455667', lowInventoryFactor: 15, currentStock: 12 },\n];\n\n// Simulate database interactions with a delay\nconst simulateDBDelay = () => new Promise(resolve => setTimeout(resolve, 300));\n\nexport async function getProducts(): Promise<Product[]> {\n  await simulateDBDelay();\n  return [...products];\n}\n\nexport async function getProductByBarcode(barcode: string): Promise<Product | undefined> {\n  await simulateDBDelay();\n  return products.find(p => p.barcode === barcode);\n}\n\nexport async function addProduct(productData: ProductFormData): Promise<Product> {\n  await simulateDBDelay();\n  const newProduct: Product = {\n    ...productData,\n    id: String(Date.now() + Math.random()), // Simple unique ID\n    currentStock: 0, // New products start with 0 stock, or could be an input\n  };\n  products.push(newProduct);\n  return newProduct;\n}\n\nexport async function getLowInventoryProducts(): Promise<Product[]> {\n  await simulateDBDelay();\n  return products.filter(p => p.currentStock <= p.lowInventoryFactor);\n}\n\nexport async function sellProductItem(barcode: string, quantitySold: number): Promise<{ success: boolean; message: string; product?: Product }> {\n  await simulateDBDelay();\n  const productIndex = products.findIndex(p => p.barcode === barcode);\n  if (productIndex === -1) {\n    return { success: false, message: 'Product not found.' };\n  }\n  if (products[productIndex].currentStock < quantitySold) {\n    return { success: false, message: `Not enough stock. Available: ${products[productIndex].currentStock}` };\n  }\n  products[productIndex].currentStock -= quantitySold;\n  return { success: true, message: 'Product sold successfully.', product: products[productIndex] };\n}\n\n// For demonstration, allow updating stock directly (e.g. after adding a product one might update its stock)\nexport async function updateProductStock(productId: string, newStock: number): Promise<Product | undefined> {\n  await simulateDBDelay();\n  const productIndex = products.findIndex(p => p.id === productId);\n  if (productIndex > -1) {\n    products[productIndex].currentStock = newStock;\n    return products[productIndex];\n  }\n  return undefined;\n}\n"],"names":[],"mappings":";;;;;;;;AAEA,IAAI,WAAsB;IACxB;QAAE,IAAI;QAAK,MAAM;QAAoB,aAAa;QAA6B,KAAK;QAAK,MAAM;QAAS,SAAS;QAAiB,oBAAoB;QAAG,cAAc;IAAG;IAC1K;QAAE,IAAI;QAAK,MAAM;QAAoB,aAAa;QAA8B,KAAK;QAAO,MAAM;QAAS,SAAS;QAAiB,oBAAoB;QAAI,cAAc;IAAE;IAC7K;QAAE,IAAI;QAAK,MAAM;QAAoB,aAAa;QAA6B,KAAK;QAAO,MAAM;QAAS,SAAS;QAAiB,oBAAoB;QAAI,cAAc;IAAG;CAC9K;AAED,8CAA8C;AAC9C,MAAM,kBAAkB,IAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;AAElE,eAAe;IACpB,MAAM;IACN,OAAO;WAAI;KAAS;AACtB;AAEO,eAAe,oBAAoB,OAAe;IACvD,MAAM;IACN,OAAO,SAAS,IAAI,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK;AAC1C;AAEO,eAAe,WAAW,WAA4B;IAC3D,MAAM;IACN,MAAM,aAAsB;QAC1B,GAAG,WAAW;QACd,IAAI,OAAO,KAAK,GAAG,KAAK,KAAK,MAAM;QACnC,cAAc;IAChB;IACA,SAAS,IAAI,CAAC;IACd,OAAO;AACT;AAEO,eAAe;IACpB,MAAM;IACN,OAAO,SAAS,MAAM,CAAC,CAAA,IAAK,EAAE,YAAY,IAAI,EAAE,kBAAkB;AACpE;AAEO,eAAe,gBAAgB,OAAe,EAAE,YAAoB;IACzE,MAAM;IACN,MAAM,eAAe,SAAS,SAAS,CAAC,CAAA,IAAK,EAAE,OAAO,KAAK;IAC3D,IAAI,iBAAiB,CAAC,GAAG;QACvB,OAAO;YAAE,SAAS;YAAO,SAAS;QAAqB;IACzD;IACA,IAAI,QAAQ,CAAC,aAAa,CAAC,YAAY,GAAG,cAAc;QACtD,OAAO;YAAE,SAAS;YAAO,SAAS,CAAC,6BAA6B,EAAE,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE;QAAC;IAC1G;IACA,QAAQ,CAAC,aAAa,CAAC,YAAY,IAAI;IACvC,OAAO;QAAE,SAAS;QAAM,SAAS;QAA8B,SAAS,QAAQ,CAAC,aAAa;IAAC;AACjG;AAGO,eAAe,mBAAmB,SAAiB,EAAE,QAAgB;IAC1E,MAAM;IACN,MAAM,eAAe,SAAS,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IACtD,IAAI,eAAe,CAAC,GAAG;QACrB,QAAQ,CAAC,aAAa,CAAC,YAAY,GAAG;QACtC,OAAO,QAAQ,CAAC,aAAa;IAC/B;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { z } from 'zod';\nimport { addProductSchema, sellProductSchema } from './validators';\nimport { addProduct as dbAddProduct, getProductByBarcode, sellProductItem as dbSellProductItem } from './data';\nimport type { Product, ProductFormData } from '@/types';\nimport { revalidatePath } from 'next/cache';\n\nexport async function createProductAction(\n  data: ProductFormData\n): Promise<{ success: boolean; message: string; product?: Product; errors?: z.ZodIssue[] }> {\n  const validationResult = addProductSchema.safeParse(data);\n\n  if (!validationResult.success) {\n    return { success: false, message: \"Validation failed.\", errors: validationResult.error.errors };\n  }\n\n  try {\n    const newProduct = await dbAddProduct(validationResult.data);\n    revalidatePath('/');\n    revalidatePath('/low-inventory');\n    revalidatePath('/add-product');\n    return { success: true, message: \"Product added successfully!\", product: newProduct };\n  } catch (error) {\n    console.error(\"Error adding product:\", error);\n    return { success: false, message: \"Failed to add product. Please try again.\" };\n  }\n}\n\nexport async function sellProductAction(\n  data: { barcode: string; quantity: number }\n): Promise<{ success: boolean; message: string; product?: Product; errors?: z.ZodIssue[] }> {\n  const validationResult = sellProductSchema.safeParse(data);\n\n  if (!validationResult.success) {\n    return { success: false, message: \"Validation failed.\", errors: validationResult.error.errors };\n  }\n\n  try {\n    const result = await dbSellProductItem(validationResult.data.barcode, validationResult.data.quantity);\n    if (result.success) {\n      revalidatePath('/low-inventory');\n      revalidatePath('/sell-product');\n    }\n    return result;\n  } catch (error) {\n    console.error(\"Error selling product:\", error);\n    return { success: false, message: \"Failed to sell product. An unexpected error occurred.\" };\n  }\n}\n\nexport async function fetchProductByBarcodeAction(barcode: string): Promise<Product | null> {\n  if (!barcode || barcode.trim() === \"\") {\n    return null;\n  }\n  try {\n    const product = await getProductByBarcode(barcode);\n    return product || null;\n  } catch (error) {\n    console.error(\"Error fetching product by barcode:\", error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AAEA;;;;;;;AAEO,eAAe,oBACpB,IAAqB;IAErB,MAAM,mBAAmB,wHAAA,CAAA,mBAAgB,CAAC,SAAS,CAAC;IAEpD,IAAI,CAAC,iBAAiB,OAAO,EAAE;QAC7B,OAAO;YAAE,SAAS;YAAO,SAAS;YAAsB,QAAQ,iBAAiB,KAAK,CAAC,MAAM;QAAC;IAChG;IAEA,IAAI;QACF,MAAM,aAAa,MAAM,CAAA,GAAA,kHAAA,CAAA,aAAY,AAAD,EAAE,iBAAiB,IAAI;QAC3D,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;YAAE,SAAS;YAAM,SAAS;YAA+B,SAAS;QAAW;IACtF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO;YAAE,SAAS;YAAO,SAAS;QAA2C;IAC/E;AACF;AAEO,eAAe,kBACpB,IAA2C;IAE3C,MAAM,mBAAmB,wHAAA,CAAA,oBAAiB,CAAC,SAAS,CAAC;IAErD,IAAI,CAAC,iBAAiB,OAAO,EAAE;QAC7B,OAAO;YAAE,SAAS;YAAO,SAAS;YAAsB,QAAQ,iBAAiB,KAAK,CAAC,MAAM;QAAC;IAChG;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,kHAAA,CAAA,kBAAiB,AAAD,EAAE,iBAAiB,IAAI,CAAC,OAAO,EAAE,iBAAiB,IAAI,CAAC,QAAQ;QACpG,IAAI,OAAO,OAAO,EAAE;YAClB,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;YACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACjB;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO;YAAE,SAAS;YAAO,SAAS;QAAwD;IAC5F;AACF;AAEO,eAAe,4BAA4B,OAAe;IAC/D,IAAI,CAAC,WAAW,QAAQ,IAAI,OAAO,IAAI;QACrC,OAAO;IACT;IACA,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,kHAAA,CAAA,sBAAmB,AAAD,EAAE;QAC1C,OAAO,WAAW;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO;IACT;AACF;;;IAtDsB;IAqBA;IAsBA;;AA3CA,+OAAA;AAqBA,+OAAA;AAsBA,+OAAA","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/sell-product/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {sellProductAction as '407e5b31eaa27f780ad44b19beba584ebc54ffdd3a'} from 'ACTIONS_MODULE0'\nexport {fetchProductByBarcodeAction as '403b58c4d98a4bd902fc1ff30eeeac4e89e9ac3287'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sales/SellProductForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/sales/SellProductForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/sales/SellProductForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4S,GACzU,0EACA","debugId":null}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sales/SellProductForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/sales/SellProductForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/sales/SellProductForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/sell-product/page.tsx"],"sourcesContent":["import SellProductForm from \"@/components/sales/SellProductForm\";\n\nexport default function SellProductPage() {\n  return (\n    <div className=\"container mx-auto py-8\">\n      <SellProductForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,8IAAA,CAAA,UAAe;;;;;;;;;;AAGtB","debugId":null}}]
}